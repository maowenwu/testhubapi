<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.StrategyTradeFeeMapper">
    <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.StrategyTradeFee">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="symbol" jdbcType="VARCHAR" property="symbol"/>
        <result column="contract_type" jdbcType="VARCHAR" property="contractType"/>
        <result column="spot_fee" jdbcType="DECIMAL" property="spotFee"/>
        <result column="contract_fee" jdbcType="DECIMAL" property="contractFee"/>
        <result column="delivery_fee" jdbcType="DECIMAL" property="deliveryFee"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, symbol, contract_type, spot_fee, contract_fee, delivery_fee, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from strategy_trade_fee
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from strategy_trade_fee
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.huobi.quantification.entity.StrategyTradeFee">
    insert into strategy_trade_fee (id, symbol, contract_type, 
      spot_fee, contract_fee, delivery_fee, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{symbol,jdbcType=VARCHAR}, #{contractType,jdbcType=VARCHAR}, 
      #{spotFee,jdbcType=DECIMAL}, #{contractFee,jdbcType=DECIMAL}, #{deliveryFee,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.huobi.quantification.entity.StrategyTradeFee">
        insert into strategy_trade_fee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="symbol != null">
                symbol,
            </if>
            <if test="contractType != null">
                contract_type,
            </if>
            <if test="spotFee != null">
                spot_fee,
            </if>
            <if test="contractFee != null">
                contract_fee,
            </if>
            <if test="deliveryFee != null">
                delivery_fee,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="symbol != null">
                #{symbol,jdbcType=VARCHAR},
            </if>
            <if test="contractType != null">
                #{contractType,jdbcType=VARCHAR},
            </if>
            <if test="spotFee != null">
                #{spotFee,jdbcType=DECIMAL},
            </if>
            <if test="contractFee != null">
                #{contractFee,jdbcType=DECIMAL},
            </if>
            <if test="deliveryFee != null">
                #{deliveryFee,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.huobi.quantification.entity.StrategyTradeFee">
        update strategy_trade_fee
        <set>
            <if test="symbol != null">
                symbol = #{symbol,jdbcType=VARCHAR},
            </if>
            <if test="contractType != null">
                contract_type = #{contractType,jdbcType=VARCHAR},
            </if>
            <if test="spotFee != null">
                spot_fee = #{spotFee,jdbcType=DECIMAL},
            </if>
            <if test="contractFee != null">
                contract_fee = #{contractFee,jdbcType=DECIMAL},
            </if>
            <if test="deliveryFee != null">
                delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.StrategyTradeFee">
    update strategy_trade_fee
    set symbol = #{symbol,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=VARCHAR},
      spot_fee = #{spotFee,jdbcType=DECIMAL},
      contract_fee = #{contractFee,jdbcType=DECIMAL},
      delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectBySymbolContractType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from strategy_trade_fee
        where symbol = #{symbol} and contract_type=#{contractType}
    </select>
</mapper>