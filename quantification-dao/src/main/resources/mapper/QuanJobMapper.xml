<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.QuanJobMapper">
  <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.QuanJob">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exchange_id" jdbcType="INTEGER" property="exchangeId" />
    <result column="job_type" jdbcType="INTEGER" property="jobType" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="ip_id" jdbcType="VARCHAR" property="ipId" />
    <result column="cron" jdbcType="VARCHAR" property="cron" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quan_job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huobi.quantification.entity.QuanJob">
    insert into quan_job (id, exchange_id, job_type, 
      job_name, account_id, symbol, 
      type, ip_id, cron, 
      state, update_date, create_date
      )
    values (#{id,jdbcType=INTEGER}, #{exchangeId,jdbcType=INTEGER}, #{jobType,jdbcType=INTEGER}, 
      #{jobName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, #{symbol,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{ipId,jdbcType=VARCHAR}, #{cron,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.QuanJob">
    update quan_job
    set exchange_id = #{exchangeId,jdbcType=INTEGER},
      job_type = #{jobType,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      symbol = #{symbol,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      ip_id = #{ipId,jdbcType=VARCHAR},
      cron = #{cron,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, exchange_id, job_type, job_name, account_id, symbol, type, ip_id, 
    cron, state, update_date, create_date
    from quan_job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, exchange_id, job_type, job_name, account_id, symbol, type, ip_id, 
    cron, state, update_date, create_date
    from quan_job
  </select>
</mapper>