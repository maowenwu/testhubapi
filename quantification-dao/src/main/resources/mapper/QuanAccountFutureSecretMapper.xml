<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.QuanAccountFutureSecretMapper">
    <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.QuanAccountFutureSecret">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="account_future_id" jdbcType="BIGINT" property="accountFutureId"/>
        <result column="access_key" jdbcType="VARCHAR" property="accessKey"/>
        <result column="secret_key" jdbcType="VARCHAR" property="secretKey"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, account_future_id, access_key, secret_key
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from quan_account_future_secret
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from quan_account_future_secret
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.huobi.quantification.entity.QuanAccountFutureSecret">
    insert into quan_account_future_secret (id, account_future_id, access_key,
      secret_key)
    values (#{id,jdbcType=BIGINT}, #{accountFutureId,jdbcType=BIGINT}, #{accessKey,jdbcType=VARCHAR},
      #{secretKey,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.huobi.quantification.entity.QuanAccountFutureSecret">
        insert into quan_account_future_secret
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="accountFutureId != null">
                account_future_id,
            </if>
            <if test="accessKey != null">
                access_key,
            </if>
            <if test="secretKey != null">
                secret_key,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="accountFutureId != null">
                #{accountFutureId,jdbcType=BIGINT},
            </if>
            <if test="accessKey != null">
                #{accessKey,jdbcType=VARCHAR},
            </if>
            <if test="secretKey != null">
                #{secretKey,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.huobi.quantification.entity.QuanAccountFutureSecret">
        update quan_account_future_secret
        <set>
            <if test="accountFutureId != null">
                account_future_id = #{accountFutureId,jdbcType=BIGINT},
            </if>
            <if test="accessKey != null">
                access_key = #{accessKey,jdbcType=VARCHAR},
            </if>
            <if test="secretKey != null">
                secret_key = #{secretKey,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.QuanAccountFutureSecret">
    update quan_account_future_secret
    set account_future_id = #{accountFutureId,jdbcType=BIGINT},
      access_key = #{accessKey,jdbcType=VARCHAR},
      secret_key = #{secretKey,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectBySourceId" resultMap="BaseResultMap">
      select id, account_source_id, access_key, secret_key FROM quan_account_future_secret where account_source_id=#{id}
    </select>
</mapper>