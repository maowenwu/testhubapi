<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.StrategyRiskHistoryMapper">
  <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.StrategyRiskHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="strategy_name" jdbcType="VARCHAR" property="strategyName" />
    <result column="strategy_version" jdbcType="BIGINT" property="strategyVersion" />
    <result column="exchange_id" jdbcType="INTEGER" property="exchangeId" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="base_coin" jdbcType="VARCHAR" property="baseCoin" />
    <result column="risk_rate" jdbcType="DECIMAL" property="riskRate" />
    <result column="net_position" jdbcType="DECIMAL" property="netPosition" />
    <result column="curr_profit" jdbcType="DECIMAL" property="currProfit" />
    <result column="total_profit" jdbcType="DECIMAL" property="totalProfit" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, strategy_name, strategy_version, exchange_id, account_id, base_coin, risk_rate, 
    net_position, curr_profit, total_profit, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from strategy_risk_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from strategy_risk_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huobi.quantification.entity.StrategyRiskHistory">
    insert into strategy_risk_history (id, strategy_name, strategy_version, 
      exchange_id, account_id, base_coin, 
      risk_rate, net_position, curr_profit, 
      total_profit, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{strategyName,jdbcType=VARCHAR}, #{strategyVersion,jdbcType=BIGINT}, 
      #{exchangeId,jdbcType=INTEGER}, #{accountId,jdbcType=BIGINT}, #{baseCoin,jdbcType=VARCHAR}, 
      #{riskRate,jdbcType=DECIMAL}, #{netPosition,jdbcType=DECIMAL}, #{currProfit,jdbcType=DECIMAL}, 
      #{totalProfit,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huobi.quantification.entity.StrategyRiskHistory">
    insert into strategy_risk_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="strategyName != null">
        strategy_name,
      </if>
      <if test="strategyVersion != null">
        strategy_version,
      </if>
      <if test="exchangeId != null">
        exchange_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="baseCoin != null">
        base_coin,
      </if>
      <if test="riskRate != null">
        risk_rate,
      </if>
      <if test="netPosition != null">
        net_position,
      </if>
      <if test="currProfit != null">
        curr_profit,
      </if>
      <if test="totalProfit != null">
        total_profit,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="strategyName != null">
        #{strategyName,jdbcType=VARCHAR},
      </if>
      <if test="strategyVersion != null">
        #{strategyVersion,jdbcType=BIGINT},
      </if>
      <if test="exchangeId != null">
        #{exchangeId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="baseCoin != null">
        #{baseCoin,jdbcType=VARCHAR},
      </if>
      <if test="riskRate != null">
        #{riskRate,jdbcType=DECIMAL},
      </if>
      <if test="netPosition != null">
        #{netPosition,jdbcType=DECIMAL},
      </if>
      <if test="currProfit != null">
        #{currProfit,jdbcType=DECIMAL},
      </if>
      <if test="totalProfit != null">
        #{totalProfit,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huobi.quantification.entity.StrategyRiskHistory">
    update strategy_risk_history
    <set>
      <if test="strategyName != null">
        strategy_name = #{strategyName,jdbcType=VARCHAR},
      </if>
      <if test="strategyVersion != null">
        strategy_version = #{strategyVersion,jdbcType=BIGINT},
      </if>
      <if test="exchangeId != null">
        exchange_id = #{exchangeId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="baseCoin != null">
        base_coin = #{baseCoin,jdbcType=VARCHAR},
      </if>
      <if test="riskRate != null">
        risk_rate = #{riskRate,jdbcType=DECIMAL},
      </if>
      <if test="netPosition != null">
        net_position = #{netPosition,jdbcType=DECIMAL},
      </if>
      <if test="currProfit != null">
        curr_profit = #{currProfit,jdbcType=DECIMAL},
      </if>
      <if test="totalProfit != null">
        total_profit = #{totalProfit,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.StrategyRiskHistory">
    update strategy_risk_history
    set strategy_name = #{strategyName,jdbcType=VARCHAR},
      strategy_version = #{strategyVersion,jdbcType=BIGINT},
      exchange_id = #{exchangeId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=BIGINT},
      base_coin = #{baseCoin,jdbcType=VARCHAR},
      risk_rate = #{riskRate,jdbcType=DECIMAL},
      net_position = #{netPosition,jdbcType=DECIMAL},
      curr_profit = #{currProfit,jdbcType=DECIMAL},
      total_profit = #{totalProfit,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>