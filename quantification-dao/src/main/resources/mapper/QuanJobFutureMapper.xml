<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.QuanJobFutureMapper">
    <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.QuanJobFuture">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="exchange_id" jdbcType="INTEGER" property="exchangeId"/>
        <result column="job_type" jdbcType="INTEGER" property="jobType"/>
        <result column="job_name" jdbcType="VARCHAR" property="jobName"/>
        <result column="job_param" jdbcType="VARCHAR" property="jobParam"/>
        <result column="job_desc" jdbcType="VARCHAR" property="jobDesc"/>
        <result column="cron" jdbcType="VARCHAR" property="cron"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, exchange_id, job_type, job_name, job_param, job_desc, cron, state, update_date, 
    create_date
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from quan_job_future
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from quan_job_future
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quan_job_future
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.huobi.quantification.entity.QuanJobFuture">
    insert into quan_job_future (id, exchange_id, job_type, 
      job_name, job_param, job_desc, 
      cron, state, update_date, 
      create_date)
    values (#{id,jdbcType=INTEGER}, #{exchangeId,jdbcType=INTEGER}, #{jobType,jdbcType=INTEGER}, 
      #{jobName,jdbcType=VARCHAR}, #{jobParam,jdbcType=VARCHAR}, #{jobDesc,jdbcType=VARCHAR}, 
      #{cron,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.huobi.quantification.entity.QuanJobFuture">
        insert into quan_job_future
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="exchangeId != null">
                exchange_id,
            </if>
            <if test="jobType != null">
                job_type,
            </if>
            <if test="jobName != null">
                job_name,
            </if>
            <if test="jobParam != null">
                job_param,
            </if>
            <if test="jobDesc != null">
                job_desc,
            </if>
            <if test="cron != null">
                cron,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="exchangeId != null">
                #{exchangeId,jdbcType=INTEGER},
            </if>
            <if test="jobType != null">
                #{jobType,jdbcType=INTEGER},
            </if>
            <if test="jobName != null">
                #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="jobParam != null">
                #{jobParam,jdbcType=VARCHAR},
            </if>
            <if test="jobDesc != null">
                #{jobDesc,jdbcType=VARCHAR},
            </if>
            <if test="cron != null">
                #{cron,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.huobi.quantification.entity.QuanJobFuture">
        update quan_job_future
        <set>
            <if test="exchangeId != null">
                exchange_id = #{exchangeId,jdbcType=INTEGER},
            </if>
            <if test="jobType != null">
                job_type = #{jobType,jdbcType=INTEGER},
            </if>
            <if test="jobName != null">
                job_name = #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="jobParam != null">
                job_param = #{jobParam,jdbcType=VARCHAR},
            </if>
            <if test="jobDesc != null">
                job_desc = #{jobDesc,jdbcType=VARCHAR},
            </if>
            <if test="cron != null">
                cron = #{cron,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.QuanJobFuture">
    update quan_job_future
    set exchange_id = #{exchangeId,jdbcType=INTEGER},
      job_type = #{jobType,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_param = #{jobParam,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=VARCHAR},
      cron = #{cron,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="insertOrUpdate">
    INSERT INTO quan_job_future
    (`exchange_id`, `job_type`, `job_name`, `job_param`,`job_desc`, `cron`, `state`, `update_date`, `create_date`)
    VALUES (#{exchangeId}, #{jobType}, #{jobName}, #{jobParam},#{jobDesc}, #{cron}, #{state}, #{createDate}, #{updateDate})
    ON DUPLICATE KEY UPDATE `exchange_id`=#{exchangeId},`job_type`=#{jobType},`job_name`=#{jobName},`job_param`=#{jobParam},
    `job_desc`=#{jobDesc},`cron`=#{cron},`state`=#{state},`update_date`=#{updateDate}
  </insert>
  <select id="selectList" parameterType="com.huobi.quantification.entity.QuanJobFuture" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from quan_job_future
      <where>
            <if test="exchangeId != null">
                and exchange_id = #{exchangeId,jdbcType=INTEGER}
            </if>
            <if test="jobDesc != null">
                and job_desc like concat(concat('%',#{jobDesc,jdbcType=VARCHAR}),'%')
            </if>
      </where>
  </select>
</mapper>