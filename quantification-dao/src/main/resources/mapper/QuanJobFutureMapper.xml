<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.QuanJobFutureMapper">
    <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.QuanJobFuture">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="exchange_id" jdbcType="INTEGER" property="exchangeId"/>
        <result column="job_type" jdbcType="INTEGER" property="jobType"/>
        <result column="job_name" jdbcType="VARCHAR" property="jobName"/>
        <result column="job_param" jdbcType="VARCHAR" property="jobParam"/>
        <result column="cron" jdbcType="VARCHAR" property="cron"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quan_job_future
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.huobi.quantification.entity.QuanJobFuture">
    insert into quan_job_future (id, exchange_id, job_type, 
      job_name, job_param, cron, 
      state, update_date, create_date
      )
    values (#{id,jdbcType=INTEGER}, #{exchangeId,jdbcType=INTEGER}, #{jobType,jdbcType=INTEGER}, 
      #{jobName,jdbcType=VARCHAR}, #{jobParam,jdbcType=VARCHAR}, #{cron,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertOrUpdate">
    INSERT INTO quan_job_future
    (`exchange_id`, `job_type`, `job_name`, `job_param`, `cron`, `state`, `update_date`, `create_date`)
    VALUES (#{exchangeId}, #{jobType}, #{jobName}, #{jobParam}, #{cron}, #{state}, #{createDate}, #{updateDate})
    ON DUPLICATE KEY UPDATE `exchange_id`=#{exchangeId},`job_type`=#{jobType},`job_name`=#{jobName},`job_param`=#{jobParam},
    `cron`=#{cron},`state`=#{state},`update_date`=#{updateDate}
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.QuanJobFuture">
    update quan_job_future
    set exchange_id = #{exchangeId,jdbcType=INTEGER},
      job_type = #{jobType,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_param = #{jobParam,jdbcType=VARCHAR},
      cron = #{cron,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, exchange_id, job_type, job_name, job_param, cron, state, update_date, 
    create_date
    from quan_job_future
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, exchange_id, job_type, job_name, job_param, cron, state, update_date, 
    create_date
    from quan_job_future
  </select>
</mapper>