<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.QuanTradeMapper">
  <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.QuanTrade">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="exchange_id" jdbcType="INTEGER" property="exchangeId" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="query_id" jdbcType="BIGINT" property="queryId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="direction" jdbcType="VARCHAR" property="direction" />
    <result column="ts" jdbcType="TIMESTAMP" property="ts" />
    <result column="trade_id" jdbcType="BIGINT" property="tradeId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from quan_trade
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.huobi.quantification.entity.QuanTrade">
    insert into quan_trade (id, exchange_id, symbol, 
      query_id, price, amount, 
      direction, ts, trade_id
      )
    values (#{id,jdbcType=BIGINT}, #{exchangeId,jdbcType=INTEGER}, #{symbol,jdbcType=VARCHAR}, 
      #{queryId,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, 
      #{direction,jdbcType=VARCHAR}, #{ts,jdbcType=TIMESTAMP}, #{tradeId,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.QuanTrade">
    update quan_trade
    set exchange_id = #{exchangeId,jdbcType=INTEGER},
      symbol = #{symbol,jdbcType=VARCHAR},
      query_id = #{queryId,jdbcType=BIGINT},
      price = #{price,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      direction = #{direction,jdbcType=VARCHAR},
      ts = #{ts,jdbcType=TIMESTAMP},
      trade_id = #{tradeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, exchange_id, symbol, query_id, price, amount, direction, ts, trade_id
    from quan_trade
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, exchange_id, symbol, query_id, price, amount, direction, ts, trade_id
    from quan_trade
  </select>
</mapper>