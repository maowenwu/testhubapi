<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.QuanAccountMapper">
    <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.QuanAccount">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="exchange_id" jdbcType="INTEGER" property="exchangeId"/>
        <result column="account_name" jdbcType="VARCHAR" property="accountName"/>
        <result column="account_source_id" jdbcType="BIGINT" property="accountSourceId"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, exchange_id, account_name, account_source_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from quan_account
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from quan_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.huobi.quantification.entity.QuanAccount">
    insert into quan_account (id, exchange_id, account_name,
      account_source_id)
    values (#{id,jdbcType=BIGINT}, #{exchangeId,jdbcType=INTEGER}, #{accountName,jdbcType=VARCHAR},
      #{accountSourceId,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.huobi.quantification.entity.QuanAccount">
        insert into quan_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="exchangeId != null">
                exchange_id,
            </if>
            <if test="accountName != null">
                account_name,
            </if>
            <if test="accountSourceId != null">
                account_source_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="exchangeId != null">
                #{exchangeId,jdbcType=INTEGER},
            </if>
            <if test="accountName != null">
                #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountSourceId != null">
                #{accountSourceId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.huobi.quantification.entity.QuanAccount">
        update quan_account
        <set>
            <if test="exchangeId != null">
                exchange_id = #{exchangeId,jdbcType=INTEGER},
            </if>
            <if test="accountName != null">
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountSourceId != null">
                account_source_id = #{accountSourceId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.QuanAccount">
    update quan_account
    set exchange_id = #{exchangeId,jdbcType=INTEGER},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_source_id = #{accountSourceId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectByExId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM quan_account where exchange_id=#{exId}
    </select>
    <select id="selectAccountId" resultType="java.lang.Long">
        SELECT id FROM quan_account WHERE exchange_id=#{exchangeId} and account_source_id=#{accountSourceId}
    </select>
</mapper>