<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huobi.quantification.dao.QuanTickerFutureMapper">
  <resultMap id="BaseResultMap" type="com.huobi.quantification.entity.QuanTickerFuture">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="exchange_id" jdbcType="INTEGER" property="exchangeId" />
    <result column="contract_code" jdbcType="VARCHAR" property="contractCode" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="high_price" jdbcType="DECIMAL" property="highPrice" />
    <result column="low_price" jdbcType="DECIMAL" property="lowPrice" />
    <result column="Last_price" jdbcType="DECIMAL" property="lastPrice" />
    <result column="ask_price" jdbcType="DECIMAL" property="askPrice" />
    <result column="bid_price" jdbcType="DECIMAL" property="bidPrice" />
    <result column="base_coin" jdbcType="VARCHAR" property="baseCoin" />
    <result column="quote_coin" jdbcType="VARCHAR" property="quoteCoin" />
    <result column="ts" jdbcType="TIMESTAMP" property="ts" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from quan_ticker_future
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.huobi.quantification.entity.QuanTickerFuture">
    insert into quan_ticker_future (id, exchange_id, contract_code, 
      contract_name, high_price, low_price, 
      Last_price, ask_price, bid_price, 
      base_coin, quote_coin, ts
      )
    values (#{id,jdbcType=BIGINT}, #{exchangeId,jdbcType=INTEGER}, #{contractCode,jdbcType=VARCHAR}, 
      #{contractName,jdbcType=VARCHAR}, #{highPrice,jdbcType=DECIMAL}, #{lowPrice,jdbcType=DECIMAL}, 
      #{lastPrice,jdbcType=DECIMAL}, #{askPrice,jdbcType=DECIMAL}, #{bidPrice,jdbcType=DECIMAL}, 
      #{baseCoin,jdbcType=VARCHAR}, #{quoteCoin,jdbcType=VARCHAR}, #{ts,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.huobi.quantification.entity.QuanTickerFuture">
    update quan_ticker_future
    set exchange_id = #{exchangeId,jdbcType=INTEGER},
      contract_code = #{contractCode,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      high_price = #{highPrice,jdbcType=DECIMAL},
      low_price = #{lowPrice,jdbcType=DECIMAL},
      Last_price = #{lastPrice,jdbcType=DECIMAL},
      ask_price = #{askPrice,jdbcType=DECIMAL},
      bid_price = #{bidPrice,jdbcType=DECIMAL},
      base_coin = #{baseCoin,jdbcType=VARCHAR},
      quote_coin = #{quoteCoin,jdbcType=VARCHAR},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, exchange_id, contract_code, contract_name, high_price, low_price, Last_price, 
    ask_price, bid_price, base_coin, quote_coin, ts
    from quan_ticker_future
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, exchange_id, contract_code, contract_name, high_price, low_price, Last_price, 
    ask_price, bid_price, base_coin, quote_coin, ts
    from quan_ticker_future
  </select>
</mapper>