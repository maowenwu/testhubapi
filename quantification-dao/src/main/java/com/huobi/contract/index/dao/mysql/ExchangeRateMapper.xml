<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huobi.contract.index.dao.ExchangeRateMapper">
    <resultMap id="BaseResultMap" type="com.huobi.contract.index.entity.ExchangeRate">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="exchange_symbol" property="exchangeSymbol" jdbcType="VARCHAR"/>
        <result column="exchange_rate" property="exchangeRate" jdbcType="DECIMAL"/>
        <result column="input_time" property="inputTime" jdbcType="TIMESTAMP"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, exchange_symbol, exchange_rate, input_time, remark
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from exchange_rate
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="getLastExchangeRateBySymbol" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
            id,
            exchange_rate,
            exchange_symbol,
            input_time,
            remark
        FROM
        ( SELECT MAX( ID ) AS max_id FROM exchange_rate WHERE exchange_symbol = #{symbol} ) s
        LEFT JOIN exchange_rate r ON s.max_id = r.id
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from exchange_rate
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.huobi.contract.index.entity.ExchangeRate">
    insert into exchange_rate (id, exchange_symbol, exchange_rate, 
      input_time, remark)
    values (#{id,jdbcType=BIGINT}, #{exchangeSymbol,jdbcType=VARCHAR}, #{exchangeRate,jdbcType=DECIMAL}, 
      #{inputTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.huobi.contract.index.entity.ExchangeRate">
        insert into exchange_rate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="exchangeSymbol != null">
                exchange_symbol,
            </if>
            <if test="exchangeRate != null">
                exchange_rate,
            </if>
            <if test="inputTime != null">
                input_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="exchangeSymbol != null">
                #{exchangeSymbol,jdbcType=VARCHAR},
            </if>
            <if test="exchangeRate != null">
                #{exchangeRate,jdbcType=DECIMAL},
            </if>
            <if test="inputTime != null">
                #{inputTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.huobi.contract.index.entity.ExchangeRate">
        update exchange_rate
        <set>
            <if test="exchangeSymbol != null">
                exchange_symbol = #{exchangeSymbol,jdbcType=VARCHAR},
            </if>
            <if test="exchangeRate != null">
                exchange_rate = #{exchangeRate,jdbcType=DECIMAL},
            </if>
            <if test="inputTime != null">
                input_time = #{inputTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huobi.contract.index.entity.ExchangeRate">
    update exchange_rate
    set exchange_symbol = #{exchangeSymbol,jdbcType=VARCHAR},
      exchange_rate = #{exchangeRate,jdbcType=DECIMAL},
      input_time = #{inputTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>