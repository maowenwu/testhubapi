<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huobi.contract.index.dao.ExchangeRateHisMapper">
    <resultMap id="BaseResultMap" type="com.huobi.contract.index.entity.ExchangeRateHis">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="exchange_id" property="exchangeId" jdbcType="BIGINT"/>
        <result column="exchange_symbol" property="exchangeSymbol" jdbcType="VARCHAR"/>
        <result column="exchange_rate" property="exchangeRate" jdbcType="DECIMAL"/>
        <result column="exchange_time" property="exchangeTime" jdbcType="TIMESTAMP"/>
        <result column="input_time" property="inputTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ExchangeRateHisSymbolMap" type="com.huobi.contract.index.dto.ExchangeRateHisSymbol">
        <result column="exchange_symbol" property="symbol" jdbcType="VARCHAR"/>
        <collection property="list" ofType="com.huobi.contract.index.entity.ExchangeRateHis">
            <result column="exchange_rate" property="exchangeRate" jdbcType="DECIMAL"/>
            <result column="exchange_time" property="exchangeTime" jdbcType="TIMESTAMP"/>
            <result column="status" property="status" jdbcType="INTEGER"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
      id, exchange_id, exchange_symbol, exchange_rate, exchange_time, input_time,status
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from exchange_rate_his
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="listBeforeRecordBySymbol" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from exchange_rate_his
        where exchange_symbol = #{symbol,jdbcType=VARCHAR}
        and input_time between #{beginTime,jdbcType=VARCHAR} and #{endTime,jdbcType=VARCHAR}
    </select>
    <select id="getLastRateHisBySymbol" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from exchange_rate_his
        where exchange_symbol = #{symbol,jdbcType=VARCHAR} order by input_time desc limit 1
    </select>
    <!--TODO-->
    <select id="listExchangeRateHisGroupSymbol" resultMap="ExchangeRateHisSymbolMap" parameterType="java.lang.String">
    SELECT
		a.exchange_symbol,
		s.exchange_rate,
		s.input_time,
		s.STATUS
	FROM
		( SELECT exchange_symbol FROM exchange_rate_his GROUP BY exchange_symbol ) a
	LEFT JOIN ( SELECT * FROM exchange_rate_his WHERE input_time >= #{beginTime,jdbcType=VARCHAR} ) s ON a.exchange_symbol = s.exchange_symbol
  </select>

    <select id="listExchangeRateHisLikeSymbol" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from exchange_rate_his where DATE_FORMAT(input_time,'%Y-%m-%d') = #{currDate,jdbcType=VARCHAR}
        and exchange_symbol like #{likeString,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from exchange_rate_his
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.huobi.contract.index.entity.ExchangeRateHis">
    insert into exchange_rate_his (id, exchange_id, exchange_symbol, 
      exchange_rate, exchange_time, input_time
      )
    values (#{id,jdbcType=BIGINT}, #{exchangeId,jdbcType=BIGINT}, #{exchangeSymbol,jdbcType=VARCHAR}, 
      #{exchangeRate,jdbcType=DECIMAL}, #{exchangeTime,jdbcType=TIMESTAMP}, #{inputTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.huobi.contract.index.entity.ExchangeRateHis">
        insert into exchange_rate_his
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="exchangeId != null">
                exchange_id,
            </if>
            <if test="exchangeSymbol != null">
                exchange_symbol,
            </if>
            <if test="exchangeRate != null">
                exchange_rate,
            </if>
            <if test="exchangeTime != null">
                exchange_time,
            </if>
            <if test="inputTime != null">
                input_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="exchangeId != null">
                #{exchangeId,jdbcType=BIGINT},
            </if>
            <if test="exchangeSymbol != null">
                #{exchangeSymbol,jdbcType=VARCHAR},
            </if>
            <if test="exchangeRate != null">
                #{exchangeRate,jdbcType=DECIMAL},
            </if>
            <if test="exchangeTime != null">
                #{exchangeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="inputTime != null">
                #{inputTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.huobi.contract.index.entity.ExchangeRateHis">
        update exchange_rate_his
        <set>
            <if test="exchangeId != null">
                exchange_id = #{exchangeId,jdbcType=BIGINT},
            </if>
            <if test="exchangeSymbol != null">
                exchange_symbol = #{exchangeSymbol,jdbcType=VARCHAR},
            </if>
            <if test="exchangeRate != null">
                exchange_rate = #{exchangeRate,jdbcType=DECIMAL},
            </if>
            <if test="exchangeTime != null">
                exchange_time = #{exchangeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="inputTime != null">
                input_time = #{inputTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huobi.contract.index.entity.ExchangeRateHis">
    update exchange_rate_his
    set exchange_id = #{exchangeId,jdbcType=BIGINT},
      exchange_symbol = #{exchangeSymbol,jdbcType=VARCHAR},
      exchange_rate = #{exchangeRate,jdbcType=DECIMAL},
      exchange_time = #{exchangeTime,jdbcType=TIMESTAMP},
      input_time = #{inputTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>